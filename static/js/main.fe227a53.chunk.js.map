{"version":3,"sources":["components/rating-star/rating-star.component.tsx","classes/movie.ts","redux/movies/movie-actions.ts","components/button/button.component.tsx","components/error/error.component.tsx","components/movie-avatar/movie-avatar.component.tsx","components/movie-item/movie-item.component.tsx","components/rating-filter-container/rating-filter-container.component.tsx","components/movie-list/movie-list.component.tsx","components/search-box/search-box.component.tsx","components/spinner/spinner.component.tsx","pages/home/home.component.tsx","pages/movie-details/movie-details.component.tsx","App.tsx","redux/movies/movie-reducer.ts","redux/root-reducer.ts","redux/store.ts","index.tsx"],"names":["Rates","Movie","id","overview","poster_path","vote_average","title","this","FETCH_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_ERROR","FETCH_MOVIE_BY_ID_SUCCESS","SET_RATE_FILTER","requestMovies","query","dispatch","getMovies","apiKey","type","url","axios","get","then","response","movies","data","results","map","movie","catch","getMovieById","movieId","Button","clickHandler","label","className","onClick","Error","errorMsg","retry","undefined","MovieAvatar","avatarUrl","src","alt","MovieItem","avatar","RatingStar","click","value","StarComponent","selected","IoStarSharp","IoStarOutline","RatingFilterContainer","useDispatch","rate","useSelector","state","movieReducer","onStarClick","selectedRate","NO_RATE","setRateFilter","val","key","withRouter","history","onMovieClick","push","length","index","SearchBox","placeholder","changeHandler","searchHandler","onChange","onKeyPress","event","Spinner","Home","useState","setQuery","error","fetching","useEffect","target","filteredMovies","filter","rateRange","renderMovieList","MovieDetails","match","params","activeMovie","requestMovieById","to","App","exact","path","component","initialState","action","combineReducers","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kVAIYA,E,yGCJSC,E,WACjB,WACaC,EACAC,EACAC,EACAC,EACAC,GACV,yBALUJ,KAKX,KAJWC,WAIX,KAHWC,cAGX,KAFWC,eAEX,KADWC,Q,wCAGb,WACI,OAA4B,OAArBC,KAAKH,YAAuB,uFAA5B,0CAAwJG,KAAKH,iB,KCL/JI,EAAe,eACfC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAA4B,4BAC5BC,EAAkB,kBAElBC,EAAgB,SAACC,GAAD,OAAoB,SAACC,GAAD,OAA6BA,EAASC,EAAUF,MAG3FG,EAAS,mCAETD,EAAY,SAACF,GAAD,OAAmC,SAACC,GAClDA,EAAS,CAAEG,KAAMV,IAEjB,IAAMW,EAAQL,EAAF,4DAA+DG,EAA/D,4DAAyHH,GAAzH,8DAA0LG,EAA1L,qEACZ,OAAOG,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACxB,IAAMC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAACC,GACtC,IAAQ1B,EAAmD0B,EAAnD1B,GAAIC,EAA+CyB,EAA/CzB,SAAUC,EAAqCwB,EAArCxB,YAAaC,EAAwBuB,EAAxBvB,aAAcC,EAAUsB,EAAVtB,MACjD,OAAO,IAAIL,EAAMC,EAAIC,EAAUC,EAAaC,EAAcC,MAG9DS,EAAU,CAAEG,KAAMT,EAAsBe,cACzCK,OAAM,WACLd,EAAU,CAAEG,KAAMR,SAIpBoB,EAAe,SAACC,GAAD,OAAoC,SAAChB,GAGtD,OAFAA,EAAS,CAAEG,KAAMV,IAEVY,IAAMC,IAAN,6CAAgDU,EAAhD,oBAAmEd,IAAUK,MAAK,SAACC,GACtF,MAA2DA,EAASE,KAA5DvB,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,YAAaC,EAAnC,EAAmCA,aAAcC,EAAjD,EAAiDA,MACjDS,EAAU,CAAEG,KAAMP,EAA2BiB,MAAO,IAAI3B,EAAMC,EAAIC,EAAUC,EAAaC,EAAcC,QACxGuB,OAAM,WACLd,EAAU,CAAEG,KAAMR,S,eCxBXsB,EAPwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAjB,OACnC,wBACIC,UAAU,aACVC,QAASH,EAFb,SAE4BC,GAAS,YCK1BG,G,MAPsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACjC,sBAAKJ,UAAU,QAAf,UACKG,GAAY,4DACFE,IAAVD,EAAsB,KAAO,cAAC,EAAD,CAAQN,aAAcM,EAAOL,MAAO,eCG3DO,G,MARkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAC7C,qBACIC,IAAKD,EACLE,IAAI,QACJT,UAAU,kBCYHU,G,MAb8B,SAAC,GAA6B,IAA3BZ,EAA0B,EAA1BA,aAAcL,EAAY,EAAZA,MAC1D,OACI,sBACIQ,QAAS,kBAAMH,EAAaL,EAAM1B,KAClCiC,UAAU,YAFd,UAGI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CAAaO,UAAWd,EAAMkB,WAElC,6BAAKlB,EAAMtB,a,wBNdXN,O,aAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,cAAAA,I,sBAAAA,M,KAeZ,IAKe+C,EAL2B,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAC1CC,EADgE,EAAfC,SACtBC,IAAcC,IAC/C,OAAO,cAACH,EAAD,CAAef,UAAU,aAAaC,QAAS,kBAAMY,EAAMC,OOWvDK,G,MA1B6B,WACxC,IAAMvC,EAAWwC,cACTC,EAASC,aAAY,SAACC,GAAD,OAAgBA,EAAMC,gBAA3CH,KAEFI,EAAc,SAACX,GACjB,IAAMY,EAAeZ,IAAUO,EAAOxD,EAAM8D,QAAUb,EACtDlC,ELFqB,SAACyC,GAAD,MAAkB,CAAEtC,KAAMN,EAAiB4C,QKEvDO,CAAcF,KAG3B,OACI,sBAAK1B,UAAU,eAAf,UACI,0DACC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAIR,KAAI,SAACqC,EAAKC,GACxB,OACI,cAAC,EAAD,CACIhB,MAAOe,EAEPhB,MAAOY,EACPT,SAAUa,GAAOR,GAFZS,WCYdC,G,MAAAA,aAvB8B,SAAC,GAAyB,IAAvB1C,EAAsB,EAAtBA,OAAQ2C,EAAc,EAAdA,QAC9CC,EAAe,SAACrC,GAA4BoC,EAAQE,KAAR,mBAAyBtC,KAE3E,OACI,gCACI,qBAAKI,UAAU,iBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,YAAf,SAEsB,IAAlBX,EAAO8C,OAAe,uDAAgC9C,EAAOG,KAAI,SAACC,EAAc2C,GAAf,OAC7D,cAAC,EAAD,CACItC,aAAcmC,EACdxC,MAAOA,GACF2C,eCKdC,G,MApB2B,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAOrE,OACI,sBAAKxC,UAAU,YAAf,UACI,uBACIjB,KAAK,SACLuD,YAAaA,EACbG,SAAUF,EACVG,WAZY,SAACC,GACH,UAAdA,EAAMb,KACNU,OAYA,cAAC,EAAD,CAAQ1C,aAAc0C,EAAezC,MAAM,iBCnBxC6C,EAJe,kBAC1B,8CC8CWC,EAvCY,WACvB,IAAMjE,EAAWwC,cACjB,EAA4B0B,qBAA5B,mBAAQnE,EAAR,KAAeoE,EAAf,KACA,EAA0CzB,aAAY,SAACC,GAAD,OAA+BA,EAAMC,gBAAnFnC,EAAR,EAAQA,OAAQ2D,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAU5B,EAAjC,EAAiCA,KAsBjC,OAJA6B,qBAAU,WACNtE,EAASF,OACV,CAACE,IAGA,sBAAKoB,UAAU,OAAf,UACI,cAAC,EAAD,CACIsC,YAAY,wBACZE,cAxBK,WAAQ5D,EAASF,EAAcC,KAyBpC4D,cAvBU,SAACI,GAAiDI,EAASJ,EAAMQ,OAAOrC,UAyBtF,qBAAKd,UAAU,YAAf,SAvBgB,WACpB,GAAIgD,EAAO,OAAO,cAAC,EAAD,IAClB,GAAIC,EAAU,OAAO,cAAC,EAAD,IAErB,IAAMG,EAAmC,IAAT/B,EAAahC,EAAOgE,QAAO,SAAC5D,GACxD,IAAM6D,EAAYjC,EAAO5B,EAAMvB,aAC/B,OAAOoF,GAAa,GAAKA,GAAa,KAFV,YAGvBjE,GAET,OAAO,cAAC,EAAD,CAAWA,OAAQ+D,IAejBG,SCMFC,G,MAnCqD,SAAC,GAAe,IAC1E5D,EADyE,EAAZ6D,MACrCC,OAAO9D,QACrC,EAAgD0B,aAAY,SAACC,GAAD,OAA+BA,EAAMC,gBAA5E/B,EAArB,EAAQkE,YAAoBV,EAA5B,EAA4BA,SAAUD,EAAtC,EAAsCA,MAChCpE,EAAWwC,cAyBjB,OAJA8B,qBAAU,WACAtD,GAAShB,EV3BS,SAACgB,GAAD,OAAqB,SAAChB,GAAD,OAA6BA,EAASe,EAAaC,KU2BxEgE,CAAiBhE,MAC1C,CAAChB,EAAUgB,IAGV,qBAAKI,UAAU,YAAf,SAvBIiD,EAAiB,cAAC,EAAD,IACjBD,EAAc,cAAC,EAAD,IAEJ,OAAVvD,EAEI,sBAAKO,UAAU,eAAf,UACI,cAAC,EAAD,CAAaO,UAAWd,EAAMkB,SAC9B,gCACI,6BAAKlB,EAAMtB,QACX,4BAAIsB,EAAMzB,WACV,+CAAkByB,EAAMvB,gBACxB,cAAC,IAAD,CAAM2F,GAAG,IAAT,gCARhB,MCVOC,EARW,kBACtB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjC,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,iBAAiBC,UAAWpB,IAC9C,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,oBAAoBC,UAAWT,Q,uBCSnDU,EAA8B,CAChCP,YAAa,KACbX,OAAO,EACP3D,OAAQ,GACR4D,UAAU,EACV5B,KAAM,GA8BKG,EA3BM,WAA6C,IAA5CD,EAA2C,uDAAnC2C,EAAcC,EAAqB,uDAAP,GACtD,OAAQA,EAAOpF,MACX,KAAKV,EACD,OAAO,2BAAKkD,GAAZ,IAAmBoC,YAAa,KAAMX,OAAO,EAAOC,UAAU,IAClE,KAAK1E,EACD,OAAO,2BAAKgD,GAAZ,IAAmBoC,YAAa,KAAMX,OAAO,EAAMC,UAAU,IACjE,KAAK3E,EACD,MAAO,CACHqF,YAAa,KACbX,OAAO,EACP3D,OAAQ8E,EAAO9E,OACf4D,UAAU,EACV5B,KAAM,GAEd,KAAK7C,EACD,OAAO,2BACA+C,GADP,IAEIoC,YAAaQ,EAAO1E,MACpBwD,UAAU,EACVD,OAAO,IAEf,KAAKvE,EACD,OAAO,2BAAK8C,GAAZ,IAAmBF,KAAM8C,EAAO9C,OACpC,QAAS,OAAOE,IC7CT6C,cAAgB,CAC3B5C,iBCDW6C,cAAYC,EAAaC,YAAgBC,M,MCIxDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAGSC,SAASC,eAAe,W","file":"static/js/main.fe227a53.chunk.js","sourcesContent":["import React from 'react';\nimport { IoStarOutline, IoStarSharp } from \"react-icons/io5\";\nimport './rating-star.component.scss';\n\nexport enum Rates {\n    TWO = 2,\n    FOUR = 4,\n    SIX = 6,\n    EIGHT = 8,\n    TEN = 10,\n    NO_RATE = 0\n};\n\ninterface IRatingStar {\n    click: (rate: Rates) => void,\n    value: Rates,\n    selected: boolean\n};\n\nconst RatingStar: React.FC<IRatingStar> = ({ click, value, selected }) => {\n    const StarComponent = selected ? IoStarSharp : IoStarOutline;\n    return <StarComponent className='RatingStar' onClick={() => click(value)} />;\n};\n\nexport default RatingStar;","export default class Movie {\n    constructor(\n        readonly id: string,\n        readonly overview: string,\n        readonly poster_path: string,\n        readonly vote_average: number,\n        readonly title: string\n    ) {}\n\n    get avatar(): string {\n        return this.poster_path === null ? 'https://www.metrorollerdoors.com.au/wp-content/uploads/2018/02/unavailable-image.jpg' : `https://image.tmdb.org/t/p/w500/${this.poster_path}`;\n    }\n};","import axios from 'axios';\nimport { Dispatch } from \"react\";\nimport Movie from \"../../classes/movie\";\nimport { Rates } from \"../../components/rating-star/rating-star.component\";\n\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\nexport const FETCH_MOVIE_BY_ID_SUCCESS = 'FETCH_MOVIE_BY_ID_SUCCESS';\nexport const SET_RATE_FILTER = 'SET_RATE_FILTER';\nexport const setRateFilter = (rate: Rates) => ({ type: SET_RATE_FILTER, rate });\nexport const requestMovies = (query?: string) => (dispatch: Dispatch<any>) => dispatch(getMovies(query));\nexport const requestMovieById = (movieId: string) => (dispatch: Dispatch<any>) => dispatch(getMovieById(movieId));\n\nconst apiKey = '253967d753de92310c2b05fb39808df8';\n\nconst getMovies = (query?: string): Dispatch<any> => (dispatch: Dispatch<any>) => {\n    dispatch({ type: FETCH_MOVIES });\n\n    const url = !!query ? `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&page=1&include_adult=false&query=${query}` : `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.asc&include_video=false&page=1`;\n    return axios.get(url).then((response: any) => {\n        const movies = response.data.results.map((movie: Movie) => {\n            const { id, overview, poster_path, vote_average, title } = movie;\n            return new Movie(id, overview, poster_path, vote_average, title);\n        });\n\n        dispatch(({ type: FETCH_MOVIES_SUCCESS, movies }))\n    }).catch(() => {\n        dispatch(({ type: FETCH_MOVIES_ERROR }));\n    });\n};\n\nconst getMovieById = (movieId: string): Dispatch<any> => (dispatch: Dispatch<any>) => {\n    dispatch({ type: FETCH_MOVIES });\n\n    return axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`).then((response: any) => {        \n        const { id, overview, poster_path, vote_average, title } = response.data;\n        dispatch(({ type: FETCH_MOVIE_BY_ID_SUCCESS, movie: new Movie(id, overview, poster_path, vote_average, title) }));\n    }).catch(() => {\n        dispatch(({ type: FETCH_MOVIES_ERROR }));\n    });\n};","import React from 'react';\nimport './button.component.scss';\n\ninterface IButtonProps {\n    clickHandler: () => void,\n    label?: string\n};\n\nconst Button: React.FC<IButtonProps> = ({ clickHandler, label }) => (\n    <button \n        className=\"MainButton\" \n        onClick={clickHandler}>{label || 'Search'}\n    </button>\n);\n\nexport default Button;","import React from 'react';\nimport Button from '../button/button.component';\nimport './error.component.scss';\n\ninterface IErrorProps {\n    errorMsg?: string,\n    retry?: () => void\n};\n\nconst Error: React.FC<IErrorProps> = ({ errorMsg, retry }) => (\n    <div className=\"Error\">\n        {errorMsg || 'Oops. An error has occurred. We\\'re sorry about that.'}\n        {retry === undefined ? null : <Button clickHandler={retry} label={'Retry'} />}\n    </div>\n);\n\nexport default Error;\n","import React from 'react';\nimport './movie-avatar.component.scss';\n\ninterface IMovieAvatarProps {\n    avatarUrl: string\n};\n\nconst MovieAvatar: React.FC<IMovieAvatarProps> = ({ avatarUrl }) => (\n    <img \n        src={avatarUrl} \n        alt='Movie'\n        className='MovieAvatar'\n    />\n);\n\nexport default MovieAvatar;","import React from 'react';\nimport Movie from '../../classes/movie';\nimport MovieAvatar from '../movie-avatar/movie-avatar.component';\nimport './movie-item.component.scss';\n\ninterface IMovieItemProps {\n    clickHandler: (movieId: string) => void,\n    movie: Movie\n};\n\nconst MovieItem: React.FC<IMovieItemProps> = ({ clickHandler, movie }) => {\n    return (\n        <div\n            onClick={() => clickHandler(movie.id)} \n            className=\"MovieItem\">\n            <div className=\"AvatarWrapper\">\n                <MovieAvatar avatarUrl={movie.avatar} />\n            </div>\n            <h6>{movie.title}</h6>\n        </div>\n    );\n};\n\nexport default MovieItem;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRateFilter } from '../../redux/movies/movie-actions';\nimport RatingStar, { Rates } from '../rating-star/rating-star.component';\nimport './rating-filter-container.component.scss';\n\nconst RatingFilterContainer: React.FC<{}> = () => {\n    const dispatch = useDispatch();\n    const { rate } = useSelector((state: any) => state.movieReducer);\n\n    const onStarClick = (value: Rates): void => {\n        const selectedRate = value === rate ? Rates.NO_RATE : value;\n        dispatch(setRateFilter(selectedRate));\n    };\n\n    return (\n        <div className=\"RatingFilter\">\n            <span>Filter movie by rates:</span>\n            {[2, 4, 6, 8, 10].map((val, key) => {\n                return (\n                    <RatingStar \n                        value={val} \n                        key={key} \n                        click={onStarClick} \n                        selected={val <= rate} \n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default RatingFilterContainer;","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Movie from '../../classes/movie';\nimport MovieItem from '../movie-item/movie-item.component';\nimport RatingFilterContainer from '../rating-filter-container/rating-filter-container.component';\nimport './movie-list.component.scss';\n\ntype IMovieListProps = RouteComponentProps<{}> & {\n    movies: Movie[],\n};\n\nconst MovieList: React.FC<IMovieListProps> = ({ movies, history }) => {\n    const onMovieClick = (movieId: string): void => { history.push(`/details/${movieId}`); };\n\n    return (\n        <div>\n            <div className=\"RatesContainer\">\n                <RatingFilterContainer />\n            </div>\n            <div className=\"MovieList\">\n                {\n                movies.length === 0 ? <p>No results were found.</p> : movies.map((movie: Movie, index: number) => (\n                    <MovieItem\n                        clickHandler={onMovieClick}\n                        movie={movie} \n                        key={index}\n                    />\n                ))\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(MovieList);","import React from 'react';\nimport Button from '../button/button.component';\nimport './search-box.component.scss';\n\ninterface ISearchProps {\n    placeholder: string,\n    changeHandler: (event: React.ChangeEvent<HTMLInputElement>) => void,\n    searchHandler: () => void\n};\n\nconst SearchBox: React.FC<ISearchProps> = ({ placeholder, changeHandler, searchHandler }) => {\n    const keyPressHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            searchHandler();\n        }\n    };\n\n    return (\n        <div className=\"SearchBox\">\n            <input \n                type='search' \n                placeholder={placeholder} \n                onChange={changeHandler}\n                onKeyPress={keyPressHandler}\n            />\n            <Button clickHandler={searchHandler} label='Search!' />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Spinner: React.FC<{}> = () => (\n    <div>Loading...</div>\n);\n\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestMovies } from '../../redux/movies/movie-actions';\nimport Error from '../../components/error/error.component';\nimport MovieList from './../../components/movie-list/movie-list.component';\nimport SearchBox from './../../components/search-box/search-box.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Movie from '../../classes/movie';\nimport { IMovieReducer } from '../../redux/movies/movie-reducer';\n\nconst Home: React.FC<{}> = () => {\n    const dispatch = useDispatch();\n    const [ query, setQuery ] = useState<string>();\n    const { movies, error, fetching, rate } = useSelector((state: any): IMovieReducer => state.movieReducer);\n\n    const onSearch = () => { dispatch(requestMovies(query)); };\n\n    const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => { setQuery(event.target.value); };\n\n    const renderMovieList = () => {\n        if (error) return <Error />;\n        if (fetching) return <Spinner />;\n\n        const filteredMovies: Movie[] = rate !== 0 ? movies.filter((movie: Movie) => {\n            const rateRange = rate - movie.vote_average;\n            return rateRange >= 0 && rateRange <= 2;\n        }) : [...movies];\n\n        return <MovieList movies={filteredMovies} />;\n    };\n\n    useEffect(() => {\n        dispatch(requestMovies());\n    }, [dispatch]);\n\n    return (\n        <div className=\"Home\">\n            <SearchBox \n                placeholder='Search for a movie...'\n                searchHandler={onSearch}\n                changeHandler={onQueryChange}\n            />\n            <div className=\"container\">\n                {renderMovieList()}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { requestMovieById } from '../../redux/movies/movie-actions';\nimport MovieAvatar from '../../components/movie-avatar/movie-avatar.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Error from './../../components/error/error.component';\nimport './movie-details.component.scss';\nimport { IMovieReducer } from '../../redux/movies/movie-reducer';\n\ntype PathParamsType = {\n    movieId: string\n};\n\nconst MovieDetails: React.FC<RouteComponentProps<PathParamsType>> = ({ match }) => {\n    const movieId: string = match.params.movieId;\n    const { activeMovie: movie, fetching, error } = useSelector((state: any): IMovieReducer => state.movieReducer);\n    const dispatch = useDispatch();\n\n    const renderMovieDetails = () => {\n        if (fetching) return <Spinner />;\n        if (error) return <Error />;\n\n        if (movie !== null) {\n            return (\n                <div className=\"MovieDetails\">\n                    <MovieAvatar avatarUrl={movie.avatar} />\n                    <div>\n                        <h2>{movie.title}</h2>\n                        <p>{movie.overview}</p>\n                        <p>Average rate: {movie.vote_average}</p>\n                        <Link to='/'>Go back</Link>\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    useEffect(() => {\n        if (!!movieId) dispatch(requestMovieById(movieId));\n    }, [dispatch, movieId]);\n    \n    return (\n        <div className=\"container\">\n            {renderMovieDetails()}\n        </div>\n    );\n};\n\nexport default MovieDetails;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Home from './pages/home/home.component';\nimport MovieDetails from './pages/movie-details/movie-details.component';\n\nconst App: React.FC<{}> = () => (\n    <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/movie-theater' component={Home} />\n        <Route exact path='/details/:movieId' component={MovieDetails} />\n    </Switch>\n);\n\nexport default App;\n","import Movie from '../../classes/movie';\nimport { Rates } from '../../components/rating-star/rating-star.component';\nimport { \n    FETCH_MOVIES,\n    FETCH_MOVIES_ERROR,\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIE_BY_ID_SUCCESS,\n    SET_RATE_FILTER\n} from './movie-actions';\n\nexport interface IMovieReducer {\n    activeMovie: Movie | null;\n    error: boolean;\n    movies: Movie[];\n    fetching: boolean;\n    rate: Rates\n}\n\nconst initialState: IMovieReducer = {\n    activeMovie: null,\n    error: false,\n    movies: [],\n    fetching: false,\n    rate: 0\n};\n\nconst movieReducer = (state = initialState, action: any = {}) => {\n    switch (action.type) {\n        case FETCH_MOVIES: \n            return { ...state, activeMovie: null, error: false, fetching: true };\n        case FETCH_MOVIES_ERROR:\n            return { ...state, activeMovie: null, error: true, fetching: false };\n        case FETCH_MOVIES_SUCCESS: \n            return {\n                activeMovie: null, \n                error: false, \n                movies: action.movies,\n                fetching: false,\n                rate: 0\n            };\n        case FETCH_MOVIE_BY_ID_SUCCESS:\n            return {\n                ...state,\n                activeMovie: action.movie,\n                fetching: false,\n                error: false\n            };\n        case SET_RATE_FILTER:\n            return { ...state, rate: action.rate };\n        default: return state;\n    }\n};\n\nexport default movieReducer;","import { combineReducers } from 'redux';\nimport movieReducer from './movies/movie-reducer';\n\n// we only have just one reducer for movies but as the app can scale we might need more reducers\nexport default combineReducers({\n    movieReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './root-reducer';\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>, document.getElementById('root')\n);"],"sourceRoot":""}